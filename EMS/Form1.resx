<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKAD
        QACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoA
        BCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANA
        AIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAE
        IOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AA
        gg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg
        6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACC
        DgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDo
        ABCAoANAAIIOAAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIO
        AAEIOgAEIOgAEICgA0AAgg4AAQg6AAQg6AAQgKADQACCDgABCDoABCDoABCAoANAAIIOAAEIOgAEIOgA
        EICgA0AAgg4AAQg6AEx4Xyj+DzeRHI4MxWKXAAAAAElFTkSuQmCC
</value>
  </data>
</root>